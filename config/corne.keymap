/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define BASE 0
#define NUMBER 1
#define FUNCTION 2
#define CONTROL 3


/ {
       behaviors {
           bhm: balanced_homerow_mods {
               compatible = "zmk,behavior-hold-tap";
               label = "HOMEROW_MODS";
               #binding-cells = <2>;
               tapping-term-ms = <200>;    // <---[[moderate duration]]
               quick-tap-ms = <0>;
               flavor = "balanced";
               bindings = <&kp>, <&kp>;
           };
       };

        conditional_layers {
                compatible = "zmk,conditional-layers";
                tri_layer {
                    if-layers = <NUMBER FUNCTION>;
                    then-layer = <CONTROL>;
                };
        };

        keymap {
                compatible = "zmk,keymap";

                base_layer {
// ---------------------------------------------------------------------------------------------------------------
//                                     |   |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U  |  I  |   O  |  P  |  |
//         |   |  META / A  |  CTRL / S  |  SHIFT / D  |  ALT / F  |  G  |   |  H  |  ALT / J  |  SHIFT / K  |   CTRL / L  |  META / ;  |  |
//                                     |   |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M  |  ,  |   .  |  /  |  |
// | L2 / TAB | L1 / ENTER | SHIFT / SPACE |   | SHIFT / SPACE | L1 / BSPC  | ALT / DELETE |
                        bindings = <
                                      &none  &kp Q  &kp W  &kp E  &kp R  &kp T    &kp Y  &kp U  &kp I     &kp O   &kp P    &none
           &none  &bhm LGUI A  &bhm LCTRL S  &bhm LSHIFT D  &bhm LALT F  &kp G    &kp H  &bhm RALT J  &bhm RSHIFT K &bhm RCTRL L &bhm RGUI SEMI &none
                                      &none  &kp Z  &kp X  &kp C  &kp V  &kp B    &kp N  &kp M  &kp COMMA &kp DOT &kp FSLH &none
                                    &lt FUNCTION TAB &lt NUMBER ENTER &kp SPACE   &kp SPACE &lt NUMBER BSPC &lt FUNCTION DELETE
                        >;
                };

                number_layer {
// -----------------------------------------------------------------------
// |  |  !  |  @  |  #  |  {  |  }  |   |  _  |  1  |  2  |  3  |  *  |  |
// |  |  $  |  %  |  ^  |  (  |  )  |   |  -  |  4  |  5  |  6  |  +  |  |
// |  | "|" |  \  |  &  |  [  |  ]  |   |  =  |  7  |  8  |  9  |  0  |  |
//                         |  |  |  |   |  |  |  |
                        bindings = <
   &none  &kp EXCL  &kp AT     &kp HASH   &kp LBRC  &kp RBRC    &kp UNDER  &kp N1  &kp N2  &kp N3  &kp KP_MULTIPLY &none
   &none  &kp DLLR  &kp PRCNT  &kp CARET  &kp LPAR  &kp RPAR    &kp MINUS  &kp N4  &kp N5  &kp N6  &kp PLUS        &none
   &none  &kp PIPE  &kp BSLH   &kp AMPS   &kp LBKT  &kp RBKT    &kp EQUAL  &kp N7  &kp N8  &kp N9  &kp N0          &none
                                      &trans  &trans  &trans    &trans  &trans  &trans
                        >;
                };

                function_layer {
// -----------------------------------------------------------------------------------------------
// |  |  HOME  |   UP   |   END   |  PG_UP  | C_VOL_UP |   |  F1  |  F2  |  F3  |  F4  |  F5   |  |
// |  |  LEFT  |  DOWN  |  RIGHT  |  PG_DN  | C_VOL_DN |   |  F6  |  F7  |  F8  |  F9  |  F10  |  |
// |  |  ESC   |    '   |    "    |    `    |     ~    |   |  F11 |  F12 | CUT  | COPY | PASTE |  |
//                                            |  |  |  |   |  |  |  |
                        bindings = <
   &none  &kp HOME  &kp UP    &kp END    &kp PG_UP  &kp C_VOL_UP   &kp F1  &kp F2  &kp F3        &kp F4         &kp F5         &none
   &none  &kp LEFT  &kp DOWN  &kp RIGHT  &kp PG_DN  &kp C_VOL_DN   &kp F6  &kp F7  &kp F8        &kp F9         &kp F10        &none
   &none  &kp ESC   &kp SQT   &kp DQT    &kp GRAVE  &kp TILDE      &kp F11 &kp F12 &kp C_AC_CUT  &kp C_AC_COPY  &kp C_AC_PASTE &none
                                         &trans  &trans  &trans    &trans  &trans  &trans
                        >;
                };

                control_layer {
// -----------------------------------------------------------------------
// |  |BTCLR|     |     |     |     |   |     |     |     |     |CALC |  |
// |  | BT1 | BT2 | BT3 | BT4 | BT5 |   |     |     |     |     |     |  |
// |  |     |     |     |     |     |   |     |     |     |     |     |  |
//                      |   |   |   |   |   |   |   |
                        bindings = <
   &none  &bt BT_CLR   &trans       &trans       &trans       &trans         &trans  &trans  &trans  &trans  &kp C_AL_CALC  &none
   &none  &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &trans  &trans  &trans  &trans  &trans  &none
   &none  &trans       &trans       &trans       &trans       &trans         &trans  &trans  &trans  &trans  &trans  &none
                                                   &trans  &trans  &trans    &trans  &trans  &trans
                        >;
                };
        };
};